---
- name: "Confirm that hostnames resolve properly"
  assert:
    that: lookup('dig', item) in hostvars[item].ip
    success_msg: "{{ item }}/{{ hostvars[item].ip }} matches {{ lookup('dig', item) }}"
    fail_msg: "{{ item }}/{{ hostvars[item].ip }} does not match {{ lookup('dig', item) }}"
  when: hostvars[item].ip is defined
  loop: "{{ query('inventory_hostnames', 'all') }}"
  ignore_errors: true

- name: "Confirm that API hostnames match loadbalancer"
  assert:
    that: lookup('dig', item ) in hostvars[groups['loadbalancer'][0]].ip
    success_msg: "{{ item }}/{{ hostvars[groups['loadbalancer'][0]].ip }} matches {{ lookup('dig', item) }}"
    fail_msg: "{{ item }}/{{ hostvars[groups['loadbalancer'][0]].ip }} does not match {{ lookup('dig', item) }}"
  when: hostvars[item].ip is defined
  loop: "{{ query('inventory_hostnames', 'api') }}"
  ignore_errors: true

- debug:
    var: hostvars[groups['loadbalancer'][0]].ip

- name: "Confirm that reverse lookups resolve properly"
  assert:
    that: hostvars[item].inventory_hostname_short in lookup('dig', '{{ hostvars[item].ip }}/PTR')
    fail_msg: "{{ hostvars[item].inventory_hostname_short }} not {{ item }}"
  loop: "{{ groups['masters'] }}"
  # Block for dev.  Can't figure out how to reverse wildcards.
  tags: [ never, reverse ]

- name: "Display the name of this hosts DNS servers"
  shell:
    cmd: host -a www.google.com | grep from
  register: stdout
- debug:
    msg: "This host is using {{ stdout.stdout_lines[0] | regex_findall('\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b') }} for DNS."

# Confirm etcd A records.

# Confirm etcd SRV records.

- name: "Confirm the administrative control of DNS domain."
  block:
    - debug:
        msg: |
          Create this TXT record in your DNS public zone
          Name: _ocp-preflight-challenge.{{ baseDomain }}
          Value: "{{ clusterName }}"
          TTL: 3  <- something very short
      
    - pause:

    - name: "Confirm that challenge TXT record exists"
      assert:
        that: "'{{ clusterName }}' == lookup('dig', '_ocp-preflight-challenge.{{ baseDomain }}/TXT')"
        success_msg: "Correct record found"
        fail_msg:    "Incorrect challenge value of {{ lookup('dig', '_ocp-preflight-challenge.{{ baseDomain }}/TXT') }}"
      ignore_errors: true
...
