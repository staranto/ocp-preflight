---
- name: "Confirm that hostnames resolve properly"
  assert:
    that: hostvars[item].ip == lookup('dig', item)
    success_msg: "{{ item }} is {{ hostvars[item].ip }}"
    fail_msg:    "{{ item }} is {{ lookup('dig', item) }} not {{ hostvars[item].ip }}"
  when: hostvars[item].ip is defined
  loop: "{{ query('inventory_hostnames', 'all') }}"
  ignore_errors: true


- name: "Confirm that reverse lookups resolve properly"
  assert:
    that: item~'.' == lookup('dig', '{{ hostvars[item].ip }}/PTR')
    fail_msg: "{{ hostvars[item].ip }} is not {{ item }}"
  loop: "{{ groups['masters'] }}"
  tags: [ never, reverse ]


- name: "Display the name of this hosts DNS servers"
  shell:
    cmd: host -a www.google.com | grep from
  register: stdout
- debug:
    msg: "This host is using {{ stdout.stdout_lines[0] | regex_findall('\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b') }} for DNS."


- name: "Confirm the administrative control of DNS domain."
  block:
    - debug:
        msg: |
          Create this TXT record in your DNS public zone
          Name: _ocp-preflight-challenge.{{ baseDomain }}
          Value: "{{ outdir }}-{{ clusterName }}"
          TTL: 3  <- something very short
      
    - pause:

    - name: "Confirm that challenge TXT record exists"
      assert:
        that: "'{{ outdir }}-{{ clusterName }}' == lookup('dig', '_ocp-preflight-challenge.{{ baseDomain }}/TXT')"
        success_msg: "Correct record found"
        fail_msg:    "Incorrect challenge value of {{ lookup('dig', '_ocp-preflight-challenge.{{ baseDomain }}/TXT') }}"
...