# ocp-preflight
# https://github.com/mysidlabs/ocp-preflight

# The main purpose of this tool is to do a pre-flight check
# prior to starting an OCP install. Experience says that the
# large majority of problems are due to environmental
# prerequesites not being met - unresolvable host names,
# closed ports, missing or inaccessible bootstrap images,
# etc.  So, ocp-preflight can be used to check much (but not
# all) of those prereqs.

# ocp-preflight can also optionally create the
# install-config.yaml, manifest and Ignition files. What's
# more, each of those files steps will be backed up before
# the negligient openshift-installer blindly deletes them.

# We're intentionally avoiding driving the actual install
# itself.  That's some medieval stuff and best left up 
# to a human.

# We're also leaving out explicit, detailed instructions on
# using this tool, so that time is taken to understand what
# the install process is all about and what role
# ocp-preflight plays.

# Usage:
# 1. git clone https://github.com/staranto/ocp-preflight
# 2. Review, understand and then edit vars/vars.yaml.  Then
#    review it again.  Then have someone else review it and
#    check your work.
# 3. ansible-playbook ocp-preflight.yaml
 
---
- name: "Preflight check for OCP UPI install"
  hosts: localhost
  connection: local
  gather_facts: false

  roles:
    - common
    
  # vars_prompt:
  # - name: baseDomain
  #   prompt: "Base domain"
  #   private: no
  #   default: "{{ baseDomain | default('') }}"
  # - name: clusterName
  #   prompt: "Cluster name"
  #   private: no
  #   default: "{{ clusterName | default('') }}"
  # - name: airGap
  #   prompt: "Air-gapped cluster environment"
  #   private: no
  #   default: "{{ airGap }}"
  # - name: outdir
  #   prompt: "Output directory"
  #   private: no
  #   default: "{{ outdir | default('') }}"
  # - name: installer
  #   prompt: "Path to installer"
  #   private: no
  #   default: "{{ installer | default('') }}"
  # - name: cosVersion
  #   prompt: "RHCOS Version to install (https://mirror.openshift.com/pub/openshift-v4)"
  #   private: no
  #   default: "{{ cosVersion | default('') }}"
  # - name: ocpArch
  #   prompt: "Architecture (x86_64, ppc64le, s390x)"
  #   private: no
  #   default: "{{ ocpArch | default('') }}"
  # - name: clusterCIDR
  #   prompt: "Cluster network CIDR"
  #   private: no
  #   default: "{{ clusterCIDR | default('') }}"
  # - name: clusterHostPrefix
  #   prompt: "Cluster host prefix"
  #   private: no
  #   default: "{{ clusterHostPrefix | default('') }}"
  # - name: serviceCIDR
  #   prompt: "Service network CIDR"
  #   private: no
  #   default: "{{ serviceCIDR | default('') }}"
  # - name: publicKeyFile
  #   prompt: "Public key file"
  #   private: no
  #   default: "{{ publicKeyFile | default('') }}"
  # - name: privateKeyFile
  #   prompt: "Private key file"
  #   private: no
  #   default: "{{ privateKeyFile | default('') }}"
  # - name: pullSecretFile
  #   prompt: "Pull secret file"
  #   private: no
  #   default: "{{ pullSecretFile | default('') }}"

  tasks:

  - set_fact:
      rhcos:
        initramfs: "rhcos/rhcos-{{ cosVersion }}-{{ ocpArch }}-installer-initramfs.{{ ocpArch }}.img"
        iso:       "rhcos/rhcos-{{ cosVersion }}-{{ ocpArch }}-installer.{{ ocpArch }}.iso"
        kernel:    "rhcos/rhcos-{{ cosVersion }}-{{ ocpArch }}-installer-kernel-{{ ocpArch }}"
        raw:       "rhcos/rhcos-{{ cosVersion }}-{{ ocpArch }}-metal.{{ ocpArch }}.raw.gz"
  
  - name: "Setup output directory"
    include_tasks: tasks/outdir.yaml
    tags: [ always ]

  - name: "Confirm installer"
    include_tasks: tasks/installer.yaml

  - name: "Confirm key pair"
    include_tasks: tasks/keys.yaml

  - name: "Generate DNS zone file"
    template:
      src: "templates/bind-zone.template"
      dest: "{{ outdir }}/{{ clusterName }}/{{ baseDomain }}.zone"
  - pause:
      prompt: "Review this zone file ({{ outdir }}/{{ clusterName }}/{{ baseDomain }}.zone) and make sure your DNS matches!!"

  - name: "Confirm DNS"
    include_tasks: tasks/dns.yaml

  - name: "Confirm installer infrastructure"
    include_tasks: tasks/infra.yaml

  - name: "Confirm network"
    include_tasks: tasks/network.yaml
    tags: [ never, network ]

  - name: "Confirm registries"
    include_tasks: tasks/registries.yaml

  - name: "Generate installer-config.yaml"
    template:
      src: "templates/install-config.yaml.template"
      dest: "{{ outdir }}/{{ clusterName }}/install-config.yaml"
  - debug:
      msg: "{{ lookup('file', '{{ outdir }}/{{ clusterName }}/install-config.yaml') }}"

  - name: "Generate HAProxy config file"
    template:
      src: "templates/haproxy.cfg.template"
      dest: "{{ outdir }}/{{ clusterName }}/haproxy.cfg"

  - pause:
      prompt: "About to Genghis mode this config (Ctrl-C to (A)bort)"

  - name: "Save install-config.yaml"
    copy:
      src: "{{ outdir }}/{{ clusterName }}/install-config.yaml"
      dest: "{{ outdir }}/{{ clusterName }}/bak/"

  - name: "Generate manifests"
    include_tasks: tasks/manifests.yaml

  - name: "Generate ignitions"
    include_tasks: tasks/ignitions.yaml

  - name: "Generate iPXEs"
    include_tasks: tasks/ipxes.yaml
...
